document.addEventListener("DOMContentLoaded",(function(){document.querySelector(".menu-toggle").addEventListener("click",e=>{document.querySelector("html").classList.toggle("nav-open")});const e=document.querySelector(".site-header");window.addEventListener("scroll",r=>{0===window.scrollY?e.classList.remove("scrolled"):e.classList.add("scrolled")});let r=new IntersectionObserver((function(e){e.forEach(e=>{0!==e.intersectionRatio?(e.target.style.opacity=1,e.target.style.transform="scale(1)"):(e.target.style.opacity=0,e.target.style.transform="scale(.8)")})}),{rootMargin:"0px",threshold:[0,.4,.5]}),t=Array.from(document.querySelectorAll(".wpfc-sermon")),n=Array.from(document.querySelectorAll(".minute-audio"));function o(e,r){"reverse"===(r||null)?e.sliderIndex--:e.sliderIndex++,e.children[0].style.marginLeft=-e.clientWidth*(e.sliderIndex%e.children.length)+"px"}t.forEach(e=>{r.observe(e)}),n.forEach(e=>{r.observe(e)}),function(){const e=document.querySelector(".slider");e.sliderIndex=0,e.addEventListener("click",r=>{if(!r.target.classList.contains("slider"))return;const t=r.target.getBoundingClientRect();if(r.clientX-t.left<t.width/2)return r.target.sliderIndex+=e.children.length,void o(r.target,"reverse");o(r.target)}),setInterval(()=>o(e),7e3)}()})),jQuery(document).ready((function(){const e=jQuery("#topBanner"),r=(e.height(),jQuery("#navToggler"));r.click(()=>{"false"===r.attr("aria-expanded")?r.attr("aria-expanded",!0):r.attr("aria-expanded",!1),jQuery("body").toggleClass("nav-open"),jQuery(".nav-bar").toggleClass("nav-open")});jQuery("#mainNavDrawer");jQuery(window).resize(()=>{jQuery(window).width()>768&&(jQuery("body").removeClass("nav-open"),jQuery(".nav-bar").removeClass("nav-open"),r.attr("aria-expanded",!1))}),jQuery(window).scroll((function(){0===jQuery(window).scrollTop()?e.removeClass("scrolled"):e.addClass("scrolled")}))}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
